package com.cgogolin.library;

import java.lang.Character;

import java.util.ArrayList;
import java.util.List;
import java.util.Arrays;

import java.util.Collections;

import java.util.Map;
import java.util.LinkedHashMap;

import java.util.regex.Pattern;
import java.util.regex.Matcher;


public class LatexPrettyPrinter {

    private static final Map<String,String> latexCommandMap = createLatexCommandMap();
    private static final Map<String,String> latexSubstitutionMap = createLatexSubstitutionMap();
    private static final Map<String,String> latexExpansionMap = createLatexExpansionMap();

    private static Map<String, String> createLatexCommandMap() {
        Map<String, String> map = new LinkedHashMap<String, String>();
            /*Most entries in this list com from a file published by the W3C under: http://www.w3.org/Math/characters/unicode.xml
             * We are not handling:
             * \d{o}
             * \b{o}
             * \t{oo}
             * See also https://en.wikibooks.org/wiki/LaTeX/Special_Characters
             */ 
        map.put("\\;","\u2009-0200A-0200A");
        map.put("\\-","\u00AD");
        map.put("\\&","\u0026");
        map.put("\\%","\u0025");
        map.put("\\#","\u0023");
        map.put("\\\"{y}","\u00FF");
        map.put("\\\"{u}","\u00FC");
        map.put("\\\"{o}","\u00F6");
        map.put("\\\"{e}","\u00EB");
        map.put("\\\"{a}","\u00E4");
//        map.put("\\\"{\\i}","\u00EF");
        map.put("\\\"{i}","\u00EF");
        map.put("\\\"{Y}","\u0178");
        map.put("\\\"{U}","\u00DC");
        map.put("\\\"{O}","\u00D6");
        map.put("\\\"{I}","\u00CF");
        map.put("\\\"{E}","\u00CB");
        map.put("\\\"{A}","\u00C4");
        map.put("\\\"","\u0308");
//        map.put("\\\'{}{I}","\u038A");
//        map.put("\\\'{}O","\u038C");
        map.put("\\\'{z}","\u017A");
        map.put("\\\'{y}","\u00FD");
        map.put("\\\'{u}","\u00FA");
        map.put("\\\'{s}","\u015B");
        map.put("\\\'{r}","\u0155");
        map.put("\\\'{o}","\u00F3");
        map.put("\\\'{o}","\u03CC");
        map.put("\\\'{n}","\u0144");
        map.put("\\\'{l}","\u013A");
        map.put("\\\'{g}","\u01F5");
        map.put("\\\'{e}","\u00E9");
        map.put("\\\'{c}","\u0107");
        map.put("\\\'{a}","\u00E1");
//        map.put("\\\'{\\i}","\u00ED");
        map.put("\\\'{i}","\u00ED");
        map.put("\\\'{Z}","\u0179");
        map.put("\\\'{Y}","\u00DD");
        map.put("\\\'{U}","\u00DA");
        map.put("\\\'{S}","\u015A");
        map.put("\\\'{R}","\u0154");
        map.put("\\\'{O}","\u00D3");
        map.put("\\\'{N}","\u0143");
        map.put("\\\'{L}","\u0139");
        map.put("\\\'{I}","\u00CD");
        map.put("\\\'{H}","\u0389");
        map.put("\\\'{E}","\u00C9");
        map.put("\\\'{E}","\u0388");
        map.put("\\\'{C}","\u0106");
        map.put("\\\'{A}","\u00C1");
//        map.put("\\\'{A}","\u0386");
//        map.put("\\\'{$\\alpha$}","\u03AC");
        map.put("\\\'","\u0301");
        map.put("\\^{}","\u005E");
        map.put("\\^{y}","\u0177");
        map.put("\\^{w}","\u0175");
        map.put("\\^{u}","\u00FB");
        map.put("\\^{s}","\u015D");
        map.put("\\^{o}","\u00F4");
        map.put("\\^{h}","\u0125");
        map.put("\\^{g}","\u011D");
        map.put("\\^{e}","\u00EA");
        map.put("\\^{c}","\u0109");
        map.put("\\^{a}","\u00E2");
        // map.put("\\^{\\j}","\u0135");
        // map.put("\\^{\\i}","\u00EE");
        map.put("\\^{Y}","\u0176");
        map.put("\\^{W}","\u0174");
        map.put("\\^{U}","\u00DB");
        map.put("\\^{S}","\u015C");
        map.put("\\^{O}","\u00D4");
        map.put("\\^{J}","\u0134");
        map.put("\\^{I}","\u00CE");
        map.put("\\^{H}","\u0124");
        map.put("\\^{G}","\u011C");
        map.put("\\^{E}","\u00CA");
        map.put("\\^{C}","\u0108");
        map.put("\\^{A}","\u00C2");
        map.put("\\^","\u0302");
        map.put("\\`{u}","\u00F9");
        map.put("\\`{o}","\u00F2");
        map.put("\\`{e}","\u00E8");
        map.put("\\`{a}","\u00E0");
//        map.put("\\`{\\i}","\u00EC");
        map.put("\\`{U}","\u00D9");
        map.put("\\`{O}","\u00D2");
        map.put("\\`{I}","\u00CC");
        map.put("\\`{E}","\u00C8");
        map.put("\\`{A}","\u00C0");
        map.put("\\.{z}","\u017C");
        map.put("\\.{g}","\u0121");
        map.put("\\.{e}","\u0117");
        map.put("\\.{c}","\u010B");
        map.put("\\.{Z}","\u017B");
        map.put("\\.{I}","\u0130");
        map.put("\\.{G}","\u0120");
        map.put("\\.{E}","\u0116");
        map.put("\\.{C}","\u010A");
        map.put("\\.","\u0307");
        map.put("\\~{u}","\u0169");
        map.put("\\~{o}","\u00F5");
        map.put("\\~{n}","\u00F1");
        map.put("\\~{a}","\u00E3");
//        map.put("\\~{\\i}","\u0129");
        map.put("\\~{U}","\u0168");
        map.put("\\~{O}","\u00D5");
        map.put("\\~{N}","\u00D1");
        map.put("\\~{I}","\u0128");
        map.put("\\~{A}","\u00C3");
        map.put("\\~","\u0303");
        map.put("\\={u}","\u016B");
        map.put("\\={o}","\u014D");
        map.put("\\={e}","\u0113");
        map.put("\\={a}","\u0101");
//        map.put("\\={\\i}","\u012B");
        map.put("\\={U}","\u016A");
        map.put("\\={O}","\u014C");
        map.put("\\={I}","\u012A");
        map.put("\\={E}","\u0112");
        map.put("\\={A}","\u0100");
        map.put("\\=","\u0304");
        map.put("\\BibTeX","BibTeX");
        map.put("\\TeX","TeX");
        map.put("\\texteuro","\u20AC");
        map.put("\\mbox","");
        map.put("\\u{u}","\u016D");
        map.put("\\u{o}","\u014F");
        map.put("\\u{g}","\u011F");
        map.put("\\u{e}","\u0115");
        map.put("\\u{a}","\u0103");
//        map.put("\\u{\\i}","\u012D");
        map.put("\\u{U}","\u016C");
        map.put("\\u{O}","\u014E");
        map.put("\\u{I}","\u012C");
        map.put("\\u{G}","\u011E");
        map.put("\\u{E}","\u0114");
        map.put("\\u{A}","\u0102");
        map.put("\\k{}","\u02DB");
        map.put("\\k{u}","\u0173");
        map.put("\\k{i}","\u012F");
        map.put("\\k{e}","\u0119");
        map.put("\\k{a}","\u0105");
        map.put("\\k{U}","\u0172");
        map.put("\\k{I}","\u012E");
        map.put("\\k{E}","\u0118");
        map.put("\\k{A}","\u0104");
        map.put("\\zeta","\u03B6");
        map.put("\\xi","\u03BE");
        map.put("\\wr","\u2240");
        map.put("\\wp","\u2118");
        map.put("\\wedge","\u2227");
        map.put("\\v{z}","\u017E");
        map.put("\\v{t}","\u0165");
        map.put("\\v{s}","\u0161");
        map.put("\\v{r}","\u0159");
        map.put("\\v{n}","\u0148");
        map.put("\\v{l}","\u013E");
        map.put("\\v{e}","\u011B");
        map.put("\\v{d}","\u010F");
        map.put("\\v{c}","\u010D");
        map.put("\\v{Z}","\u017D");
        map.put("\\v{T}","\u0164");
        map.put("\\v{S}","\u0160");
        map.put("\\v{R}","\u0158");
        map.put("\\v{N}","\u0147");
        map.put("\\v{L}","\u013D");
        map.put("\\v{E}","\u011A");
        map.put("\\v{D}","\u010E");
        map.put("\\v{C}","\u010C");
        map.put("_\\ast","\u2217");        
        map.put("\\volintegral","\u2230");
        map.put("\\virgo","\u264D");
        map.put("\\verymuchless","\u22D8");
        map.put("\\verymuchgreater","\u22D9");
        map.put("\\vert","\u007C");
        map.put("\\venus","\u2640");
        map.put("\\veebar","\u22BB");
        map.put("\\vee","\u2228");
        map.put("\\vdots","\u22EE");
        map.put("\\vdash","\u22A2");
        map.put("\\vartriangleright","\u22B3");
        map.put("\\vartriangleleft","\u22B2");
        map.put("\\vartriangle","\u25B5");
        map.put("\\varsupsetneq","\u228B-0FE00");
        map.put("\\varsubsetneqq","\u228A-0FE00");
        map.put("\\varsigma","\u03C2");
        map.put("\\varrho","\u03F1");
        map.put("\\varpi","\u03D6");
        map.put("\\varphi","\u03C6");
        map.put("\\varnothing","\u2205");
        map.put("\\varkappa","\u03F0");
        map.put("\\varepsilon","\u025B");
        map.put("\\v","\u030C");
        map.put("\\urcorner","\u231D");
        map.put("\\uranus","\u2645");
        map.put("\\upuparrows","\u21C8");
        map.put("\\upslopeellipsis","\u22F0");
        map.put("\\upsilon","\u03C5");
        map.put("\\uplus","\u228E");
        map.put("\\upharpoonright","\u21BE");
        map.put("\\upharpoonleft","\u21BF");
        map.put("\\updownarrow","\u2195");
        map.put("\\uparrow","\u2191");
        map.put("\\ulcorner","\u231C");
        map.put("\\u","\u0306");
        map.put("\\twoheadrightarrow","\u21A0");
        map.put("\\twoheadleftarrow","\u219E");
        map.put("\\truestate","\u22A7");
        map.put("\\trianglerighteq","\u22B5");
        map.put("\\triangleright","\u25B9");
        map.put("\\triangleq","\u225C");
        map.put("\\trianglelefteq","\u22B4");
        map.put("\\triangleleft","\u25C3");
        map.put("\\triangledown","\u25BF");
        map.put("\\top","\u22A4");
        map.put("\\tone{55}","\u02E5");
        map.put("\\tone{44}","\u02E6");
        map.put("\\tone{33}","\u02E7");
        map.put("\\tone{22}","\u02E8");
        map.put("\\tone{11}","\u02E9");
        map.put("\\tildetrpl","\u224B");
        map.put("\\therefore","\u2234");
        map.put("\\th","\u00FE");
        map.put("\\textyen","\u00A5");
        map.put("\\textvisiblespace","\u2423");
        map.put("\\textvartheta","\u03D1");
        map.put("\\textturnk","\u029E");
        map.put("\\texttrademark","\u2122");
        map.put("\\times","\u00D7");
        map.put("\\texttimes","\u00D7");
        map.put("\\texttildelow","\u02DC");
        map.put("\\textthreequarters","\u00BE");
        map.put("\\texttheta","\u03B8");
        map.put("\\textsterling","\u00A3");
        map.put("\\textsection","\u00A7");
        map.put("\\textregistered","\u00AE");
        map.put("\\textquotesingle","\u0027");
        map.put("\\textquotedblright","\u201D");
        map.put("\\textquotedblleft","\u201C");
        map.put("\\textquestiondown","\u00BF");
        map.put("\\textphi","\u0278");
        map.put("\\textperthousand","\u2030");
        map.put("\\textpertenthousand","\u2031");
        map.put("\\textperiodcentered","\u02D9");
        map.put("\\textparagraph","\u00B6");
        map.put("\\textordmasculine","\u00BA");
        map.put("\\textordfeminine","\u00AA");
        map.put("\\textonequarter","\u00BC");
        map.put("\\textonehalf","\u00BD");
        map.put("\\textnrleg","\u019E");
        map.put("\\texthvlig","\u0195");
        map.put("\\textfrac{7}{8}","\u215E");
        map.put("\\textfrac{5}{8}","\u215D");
        map.put("\\textfrac{5}{6}","\u215A");
        map.put("\\textfrac{4}{5}","\u2158");
        map.put("\\textfrac{3}{8}","\u215C");
        map.put("\\textfrac{3}{5}","\u2157");
        map.put("\\textfrac{2}{5}","\u2156");
        map.put("\\textfrac{2}{3}","\u2154");
        map.put("\\textfrac{1}{8}","\u215B");
        map.put("\\textfrac{1}{6}","\u2159");
        map.put("\\textfrac{1}{5}","\u2155");
        map.put("\\textfrac{1}{3}","\u2153");
        map.put("\\frac{7}{8}","\u215E");
        map.put("\\frac{5}{8}","\u215D");
        map.put("\\frac{5}{6}","\u215A");
        map.put("\\frac{4}{5}","\u2158");
        map.put("\\frac{3}{8}","\u215C");
        map.put("\\frac{3}{5}","\u2157");
        map.put("\\frac{2}{5}","\u2156");
        map.put("\\frac{2}{3}","\u2154");
        map.put("\\frac{1}{8}","\u215B");
        map.put("\\frac{1}{6}","\u2159");
        map.put("\\frac{1}{5}","\u2155");
        map.put("\\frac{1}{3}","\u2153");
        map.put("\\textexclamdown","\u00A1");
        map.put("\\textendash","\u2013");
        map.put("\\textemdash","\u2014");
        map.put("\\textdoublepipe","\u01C2");
        map.put("\\textdollar","\u0024");
        map.put("\\textdegree","\u00B0");
        map.put("\\textdaggerdbl","\u2021");
        map.put("\\textdagger","\u2020");
        map.put("\\dagger","\u2020");
        map.put("\\dag","\u2020");
        map.put("\\textcurrency","\u00A4");
        map.put("\\textcopyright","\u00A9");
        map.put("\\textcent","\u00A2");
        map.put("\\textbullet","\u2022");
        map.put("\\textbrokenbar","\u00A6");
//        map.put("\\textbackslash","\u005C"); // very strange error!!!
        map.put("\\textasciitilde","\u007E");
        map.put("\\textasciimacron","\u00AF");
        map.put("\\textasciigrave","\u0060");
        map.put("\\textasciidieresis","\u00A8");
        map.put("\\textasciicaron","\u02C7");
        map.put("\\textasciibreve","\u02D8");
        map.put("\\textasciiacute","\u00B4");
        map.put("\\textTheta","\u03F4");
        map.put("\\taurus","\u2649");
        map.put("\\tau","\u03C4");
        map.put("\\swarrow","\u2199");
        map.put("\\surfintegral","\u222F");
        map.put("\\surd","\u221A");
        map.put("\\supsetneqq","\u2ACC");
        map.put("\\supsetneq","\u228B");
        map.put("\\supseteqq","\u2AC6");
        map.put("\\supseteq","\u2287");
        map.put("\\supset","\u2283");
        map.put("\\sum","\u2211");
        map.put("\\succnsim","\u22E9");
        map.put("\\succneqq","\u2AB6");
        map.put("\\succnapprox","\u2ABA");
        map.put("\\succeq","\u2AB0");
        map.put("\\succcurlyeq","\u227D");
        map.put("\\succapprox","\u227F");
        map.put("\\succapprox","\u2AB8");
        map.put("\\succ","\u227B");
        map.put("\\subsetneqq","\u2ACB");
        map.put("\\subsetneq","\u228A");
        map.put("\\subseteqq","\u2AC5");
        map.put("\\subseteq","\u2286");
        map.put("\\subset","\u2282");
        map.put("\\starequal","\u225B");
        map.put("\\star","\u22C6");
        map.put("\\stackrel{*}{=}","\u2A6E");
        map.put("\\ss","\u00DF");
        map.put("\\square","\u25A1");
        map.put("\\sqsupseteq","\u2292");
        map.put("\\sqsupset","\u2290");
        map.put("\\sqsubseteq","\u2291");
        map.put("\\sqsubset","\u228F");
        map.put("\\sqrint","\u2A16");
        map.put("\\sqcup","\u2294");
        map.put("\\sqcap","\u2293");
        map.put("\\sphericalangle","\u2222");
        map.put("\\space","\u0020");
        map.put("\\smile","\u2323");
        map.put("\\simeq","\u2243");
        map.put("\\sim\\joinrel\\leadsto","\u27FF");
        map.put("\\sim","\u223C");
        map.put("\\sigma","\u03C3");
        map.put("\\sharp","\u266F");
        map.put("\\setminus","\u2216");
        map.put("\\searrow","\u2198");
        map.put("\\scorpio","\u264F");
        map.put("\\saturn","\u2644");
        map.put("\\sagittarius","\u2650");
        map.put("\\r{}","\u02DA");
        map.put("\\r{u}","\u016F");
        map.put("\\r{U}","\u016E");
        map.put("\\rule{1em}{1pt}","\u2015");
        map.put("\\rtimes","\u22CA");
        map.put("\\rmoustache","\u23B1");
        map.put("\\risingdotseq","\u2253");
        map.put("\\rightthreetimes","\u22CC");
        map.put("\\rightsquigarrow","\u21DD");
        map.put("\\rightrightarrows","\u21C9");
        map.put("\\rightmoon","\u263E");
        map.put("\\rightleftharpoons","\u21CC");
        map.put("\\rightleftarrows","\u21C4");
        map.put("\\rightharpoonup","\u21C0");
        map.put("\\rightharpoondown","\u21C1");
        map.put("\\rightarrowtail","\u21A3");
        map.put("\\rightarrow","\u2192");
        map.put("\\rightanglearc","\u22BE");
        map.put("\\rightangle","\u221F");
        map.put("\\rho","\u03C1");
        map.put("\\rfloor","\u230B");
        map.put("\\recorder","\u2315");
        map.put("\\rceil","\u2309");
        map.put("\\rbrace","\u007D");
        map.put("\\rangle","\u232A");
        map.put("\\r","\u030A");
        map.put("\\quarternote","\u2669");
        map.put("\\psi","\u03C8");
        map.put("\\propto","\u221D");
        map.put("\\prod","\u220F");
        map.put("\\precneqq","\u2AB5");
        map.put("\\precnapprox","\u2AB9");
        map.put("\\preceq","\u2AAF");
        map.put("\\precedesnotsimilar","\u22E8");
        map.put("\\preccurlyeq","\u227C");
        map.put("\\precapprox","\u227E");
        map.put("\\precapprox","\u2AB7");
        map.put("\\prec","\u227A");
        map.put("\\pm","\u00B1");
        map.put("\\pluto","\u2647");
        map.put("\\pitchfork","\u22D4");
        map.put("\\pisces","\u2653");
        map.put("\\pi","\u03C0");
        map.put("\\phi","\u03D5");
        map.put("\\perspcorrespond","\u2306");
        map.put("\\perspcorrespond","\u2A5E");
        map.put("\\perp","\u22A5");
        map.put("\\partial","\u2202");
        map.put("\\parallel","\u2225");
        map.put("\\otimes","\u2297");
        map.put("\\oslash","\u2298");
        map.put("\\original","\u22B6");
        map.put("\\oplus","\u2295");
        map.put("\\openbracketright","\u301B");
        map.put("\\openbracketleft","\u301A");
        map.put("\\ominus","\u2296");
        map.put("\\omega","\u03C9");
        map.put("\\oint","\u222E");
        map.put("\\oe","\u0153");
        map.put("\\odot","\u2299");
        map.put("\\o","\u00F8");
        map.put("\\nwarrow","\u2196");
        map.put("\\nvdash","\u22AC");
        map.put("\\nvDash","\u22AD");
        map.put("\\nu","\u03BD");
        map.put("\\ntrianglerighteq","\u22ED");
        map.put("\\ntriangleright","\u22EB");
        map.put("\\ntrianglelefteq","\u22EC");
        map.put("\\ntriangleleft","\u22EA");
        map.put("\\nsupseteqq","\u2AC6-00338");
        map.put("\\nsubseteqq","\u2AC5-00338");
        map.put("\\nrightarrow","\u219B");
        map.put("\\nparallel","\u2226");
        map.put("\\notlessgreater","\u2278");
        map.put("\\notgreaterless","\u2279");
        map.put("\\not\\supseteq","\u2289");
        map.put("\\not\\supset","\u2285");
        map.put("\\not\\succeq","\u2AB0-00338");
        map.put("\\not\\succ","\u2281");
        map.put("\\not\\subseteq","\u2288");
        map.put("\\not\\subset","\u2284");
        map.put("\\not\\sqsupseteq","\u22E3");
        map.put("\\not\\sqsubseteq","\u22E2");
        map.put("\\not\\simeq","\u2244");
        map.put("\\not\\sim","\u2241");
        map.put("\\not\\preceq","\u2AAF-00338");
        map.put("\\not\\prec","\u2280");
        map.put("\\not\\ni","\u220C");
        map.put("\\not\\leq","\u2270");
        map.put("\\not\\kern-0.3em\\times","\u226D");
        map.put("\\not\\in","\u2209");
        map.put("\\not\\geq","\u2271");
        map.put("\\not\\equiv","\u2262");
        map.put("\\not\\doteq","\u2250-00338");
        map.put("\\not\\cong","\u2247");
        map.put("\\not\\approx","\u2249");
        map.put("\\not\\apid","\u224B-00338");
        map.put("\\not>","\u226F");
        map.put("\\not<","\u226E");
        map.put("\\not{=}","\u2260");
        map.put("\\nolinebreak","\u2060");
        map.put("\\nmid","\u2224");
        map.put("\\nleqslant","\u2A7D-00338");
        map.put("\\nleftrightarrow","\u21AE");
        map.put("\\nleftarrow","\u219A");
        map.put("\\ni","\u220B");
        map.put("\\ngeqslant","\u2A7E-00338");
        map.put("\\ng","\u014B");
        map.put("\\nexists","\u2204");
        map.put("\\neptune","\u2646");
        map.put("\\nearrow","\u2197");
        map.put("\\natural","\u266E");
        map.put("\\nabla","\u2207");
        map.put("\\nVdash","\u22AE");
        map.put("\\nVDash","\u22AF");
        map.put("\\nRightarrow","\u21CF");
        map.put("\\nLeftrightarrow","\u21CE");
        map.put("\\nLeftarrow","\u21CD");
        map.put("\\multimap","\u22B8");
        map.put("\\mu","\u03BC");
        map.put("\\mp","\u2213");
        map.put("\\mkern4mu","\u205F");
        map.put("\\mkern1mu","\u200A");
        map.put("\\mid","\u2223");
        map.put("\\mho","\u2127");
        map.put("\\mercury","\u263F");
        map.put("\\measuredangle","\u2221");
        map.put("\\mbox{\\texteuro}","\u20AC");
        // map.put("\\mathscr{o}","\u2134");
        // map.put("\\mathscr{l}","\u2113");
        // map.put("\\mathscr{g}","\u210A");
        // map.put("\\mathscr{e}","\u212F");
        // map.put("\\mathscr{R}","\u211B");
        // map.put("\\mathscr{M}","\u2133");
        // map.put("\\mathscr{L}","\u2112");
        // map.put("\\mathscr{I}","\u2110");
        // map.put("\\mathscr{H}","\u210B");
        // map.put("\\mathscr{F}","\u2131");
        // map.put("\\mathscr{E}","\u2130");
        // map.put("\\mathscr{B}","\u212C");
        // map.put("\\mathrm{\\mu}","\u00B5");
        // map.put("\\mathrm{\\ddot{Y}}","\u03AB");
        // map.put("\\mathrm{\\ddot{I}}","\u03AA");
        // map.put("\\mathrm{\'\\Omega}","\u038F");
        // map.put("\\mathrm{\'Y}","\u038E");
        // map.put("\\mathfrak{Z}","\u2128");
        // map.put("\\mathfrak{R}","\u211C");
        // map.put("\\mathfrak{I}","\u2111");
        // map.put("\\mathfrak{H}","\u210C");
        // map.put("\\mathfrak{C}","\u212D");
        map.put("\\mathchar\"2208","\u2316");
        map.put("\\mathbin{{:}\\!\\!{-}\\!\\!{:}}","\u223A");
        // map.put("\\mathbb{Z}","\u2124");
        // map.put("\\mathbb{R}","\u211D");
        // map.put("\\mathbb{Q}","\u211A");
        // map.put("\\mathbb{P}","\u2119");
        // map.put("\\mathbb{N}","\u2115");
        // map.put("\\mathbb{H}","\u210D");
        // map.put("\\mathbb{C}","\u2102");
        map.put("\\mapsto","\u21A6");
        map.put("\\male","\u2642");
        map.put("\\lvertneqq","\u2268-0FE00");
        map.put("\\ltimes","\u22C9");
        map.put("\\lrcorner","\u231F");
        map.put("\\lozenge","\u25CA");
        map.put("\\looparrowright","\u21AC");
        map.put("\\looparrowleft","\u21AB");
        map.put("\\longrightarrow","\u27F6");
        map.put("\\longmapsto","\u27FC");
        map.put("\\longleftrightarrow","\u27F7");
        map.put("\\longleftarrow","\u27F5");
        map.put("\\lnsim","\u22E6");
        map.put("\\lnot","\u00AC");
        map.put("\\lneqq","\u2268");
        map.put("\\lneq","\u2A87");
        map.put("\\lnapprox","\u2A89");
        map.put("\\lmoustache","\u23B0");
        map.put("\\llcorner","\u231E");
        map.put("\\ll","\u226A");
        map.put("\\libra","\u264E");
        map.put("\\lfloor","\u230A");
        map.put("\\lessgtr","\u2276");
        map.put("\\lessequivlnt","\u2272");
        map.put("\\lesseqqgtr","\u2A8B");
        map.put("\\lesseqgtr","\u22DA");
        map.put("\\lessdot","\u22D6");
        map.put("\\lessapprox","\u2A85");
        map.put("\\leqslant","\u2A7D");
        map.put("\\leqq","\u2266");
        map.put("\\leq","\u2264");
        map.put("\\leo","\u264C");
        map.put("\\leftthreetimes","\u22CB");
        map.put("\\leftrightsquigarrow","\u21AD");
        map.put("\\leftrightharpoons","\u21CB");
        map.put("\\leftrightarrows","\u21C6");
        map.put("\\leftrightarrow","\u2194");
        map.put("\\leftleftarrows","\u21C7");
        map.put("\\leftharpoonup","\u21BC");
        map.put("\\leftharpoondown","\u21BD");
        map.put("\\leftarrowtail","\u21A2");
        map.put("\\leftarrow","\u2190");
        map.put("\\ldots","\u2026");
        map.put("\\lceil","\u2308");
        map.put("\\lbrace","\u007B");
        map.put("\\lazysinv","\u223E");
        map.put("\\langle","\u2329");
        map.put("\\lambda","\u03BB");
        map.put("\\l", "\u0142");
        map.put("\\kappa","\u03BA");
        map.put("\\k","\u0328");
        map.put("\\jupiter","\u2643");
        map.put("\\iota","\u03B9");
        map.put("\\intercal","\u22BA");
        map.put("\\int\\!\\int\\!\\int","\u222D");
        map.put("\\int\\!\\int","\u222C");
        map.put("\\int","\u222B");
        map.put("\\infty","\u221E");
        map.put("\\in","\u2208");
        map.put("\\image","\u22B7");
        map.put("\\i","\u0131");
        map.put("\\hslash","\u210F");
        map.put("\\hphantom{0}","\u2007");
        map.put("\\hphantom{,}","\u2008");
        map.put("\\hookrightarrow","\u21AA");
        map.put("\\hookleftarrow","\u21A9");
        map.put("\\homothetic","\u223B");
        map.put("\\hermitconjmatrix","\u22B9");
        map.put("\\gvertneqq","\u2269-0FE00");
        map.put("\\guilsinglright","\u203A");
        map.put("\\guilsinglleft","\u2039");
        map.put("\\guillemotright","\u00BB");
        map.put("\\guillemotleft","\u00AB");
        map.put("\\gtrless","\u2277");
        map.put("\\gtreqqless","\u2A8C");
        map.put("\\gtreqless","\u22DB");
        map.put("\\gtrdot","\u22D7");
        map.put("\\gtrapprox","\u2A86");
        map.put("\\greaterequivlnt","\u2273");
        map.put("\\gnsim","\u22E7");
        map.put("\\gneqq","\u2269");
        map.put("\\gneq","\u2A88");
        map.put("\\gnapprox","\u2A8A");
        map.put("\\gimel","\u2137");
        map.put("\\gg","\u226B");
        map.put("\\geqslant","\u2A7E");
        map.put("\\geqq","\u2267");
        map.put("\\geq","\u2265");
        map.put("\\gemini","\u264A");
        map.put("\\gamma","\u03B3");
        map.put("\\frown","\u2322");
        map.put("\\forcesextra","\u22A8");
        map.put("\\forall","\u2200");
        map.put("\\flat","\u266D");
        map.put("\\fbox{~~}","\u25AD");
        map.put("\\fallingdotseq","\u2252");
        map.put("\\exists","\u2203");
        map.put("\\eth","\u01AA");
        map.put("\\eta","\u03B7");
        map.put("\\estimates","\u2259");
        map.put("\\equiv","\u2261");
        map.put("\\eqslantless","\u2A95");
        map.put("\\eqslantgtr","\u2A96");
        map.put("\\eqcirc","\u2256");
        map.put("\\epsilon","\u03B5");
        map.put("\\ensuremath{\\Elzpes}","\u20A7");
        map.put("\\eighthnote","\u266A");
        map.put("\\downslopeellipsis","\u22F1");
        map.put("\\downharpoonright","\u21C2");
        map.put("\\downharpoonleft","\u21C3");
        map.put("\\downdownarrows","\u21CA");
        map.put("\\downarrow","\u2193");
        map.put("\\dotplus","\u2214");
        map.put("\\doteqdot","\u2251");
        map.put("\\doteq","\u2250");
        map.put("\\dj","\u0111");
        map.put("\\divideontimes","\u22C7");
        map.put("\\div","\u00F7");
        map.put("\\digamma","\u03DD");
        map.put("\\diamond","\u22C4");
        map.put("\\diamond","\u2662");
        map.put("\\diagup","\u2571");
        map.put("\\dh","\u00F0");
        map.put("\\delta","\u03B4");
        // map.put("\\ddot{\\upsilon}","\u03CB");
        // map.put("\\ddot{\\iota}","\u03CA");
        map.put("\\dddot","\u20DB");
        map.put("\\ddddot","\u20DC");
        map.put("\\dblarrowupdown","\u21C5");
        map.put("\\dashv","\u22A3");
        map.put("\\daleth","\u2138");
        map.put("\\c{}","\u00B8");
        map.put("\\c{t}","\u0163");
        map.put("\\c{s}","\u015F");
        map.put("\\c{r}","\u0157");
        map.put("\\c{n}","\u0146");
        map.put("\\c{l}","\u013C");
        map.put("\\c{k}","\u0137");
        map.put("\\c{g}","\u0123");
        map.put("\\c{c}","\u00E7");
        map.put("\\c{T}","\u0162");
        map.put("\\c{S}","\u015E");
        map.put("\\c{R}","\u0156");
        map.put("\\c{N}","\u0145");
        map.put("\\c{L}","\u013B");
        map.put("\\c{K}","\u0136");
        map.put("\\c{G}","\u0122");
        map.put("\\c{C}","\u00C7");
        map.put("\\curvearrowright","\u21B7");
        map.put("\\curvearrowleft","\u21B6");
        map.put("\\curlywedge","\u22CF");
        map.put("\\curlyvee","\u22CE");
        map.put("\\curlyeqsucc","\u22DF");
        map.put("\\curlyeqprec","\u22DE");
        map.put("\\cup","\u222A");
        map.put("\\coprod","\u2210");
        map.put("\\cong","\u2245");
        map.put("\\complement","\u2201");
        map.put("\\clwintegral","\u2231");
        map.put("\\clockoint","\u2A0F");
        map.put("\\circleddash","\u229D");
        map.put("\\circledcirc","\u229A");
        map.put("\\circledast","\u229B");
        map.put("\\circledS","\u24C8");
        map.put("\\circlearrowright","\u21BB");
        map.put("\\circlearrowleft","\u21BA");
        map.put("\\circeq","\u2257");
        map.put("\\circ","\u2218");
        map.put("\\chi","\u03C7");
        map.put("\\cdots","\u22EF");
        map.put("\\cdot","\u00B7");
        map.put("\\cdot","\u22C5");
        map.put("\\capricornus","\u2651");
        map.put("\\cap","\u2229");
        map.put("\\cancer","\u264B");
        map.put("\\c","\u0327");      
        map.put("\\bumpeq","\u224F");
        map.put("\\bullet","\u2219");
        map.put("\\boxtimes","\u22A0");
        map.put("\\boxplus","\u229E");
        map.put("\\boxminus","\u229F");
        map.put("\\boxdot","\u22A1");
        map.put("\\bowtie","\u22C8");
        map.put("\\blacktriangleright","\u25B8");
        map.put("\\blacktriangleleft","\u25C2");
        map.put("\\blacktriangledown","\u25BE");
        map.put("\\blacktriangle","\u25B4");
        map.put("\\blacksquare","\u25AA");
        map.put("\\blacklozenge","\u29EB");
        map.put("\\bigtriangleup","\u25B3");
        map.put("\\bigtriangledown","\u25BD");
        map.put("\\bigcup","\u22C3");
        map.put("\\bigcirc","\u25CB");
        map.put("\\bigcirc","\u25EF");
        map.put("\\bigcap","\u22C2");
        map.put("\\between","\u226C");
        map.put("\\beth","\u2136");
        map.put("\\beta","\u03B2");
        map.put("\\because","\u2235");
        map.put("\\barwedge","\u2305");
        map.put("\\backsimeq","\u22CD");
        map.put("\\backsim","\u223D");
        map.put("\\backprime","\u2035");
        map.put("\\backepsilon","\u03F6");
        map.put("\\asymp","\u224D");
        map.put("\\ast","\u002A");
        map.put("\\arrowwaveright","\u219C");
        map.put("\\arrowwaveright","\u219D");
        map.put("\\aries","\u2648");
        map.put("\\aquarius","\u2652");
        map.put("\\approxnotequal","\u2246");
        map.put("\\approxeq","\u224A");
        map.put("\\approx","\u2248");
        map.put("\\angle","\u2220");
        map.put("\\amalg","\u2A3F");
        map.put("\\alpha","\u03B1");
        map.put("\\allequal","\u224C");
        map.put("\\aleph","\u2135");
        map.put("\\ae","\u00E6");
        // map.put("\\acute{\\upsilon}","\u03CD");
        // map.put("\\acute{\\omega}","\u03CE");
        // map.put("\\acute{\\iota}","\u03AF");
        // map.put("\\acute{\\eta}","\u03AE");
        // map.put("\\acute{\\epsilon}","\u03AD");
        // map.put("\\acute{\\ddot{\\upsilon}}","\u03B0");
        // map.put("\\acute{\\ddot{\\iota}}","\u0390");
        map.put("\\aa","\u00E5");
        map.put("\\`","\u0300");
        map.put("\\_","\u005F");
        map.put("\\Zeta","\u0396");
        map.put("\\Xi","\u039E");
        map.put("\\Vvdash","\u22AA");
        map.put("\\Vert","\u2016");
        map.put("\\Vdash","\u22A9");
        map.put("\\VDash","\u22AB");
        map.put("\\Upsilon","\u03A5");
        map.put("\\Upsilon","\u03D2");
        map.put("\\Updownarrow","\u21D5");
        map.put("\\Uparrow","\u21D1");
        map.put("\\UpEquilibrium","\u296E");
        map.put("\\UpArrowBar","\u2912");
        map.put("\\Theta","\u0398");
        map.put("\\Tau","\u03A4");
        map.put("\\TH","\u00DE");
        map.put("\\Supset","\u22D1");
        map.put("\\Subset","\u22D0");
        map.put("\\Stigma","\u03DA");
        map.put("\\Sigma","\u03A3");
        map.put("\\Sampi","\u03E0");
        map.put("\\RuleDelayed","\u29F4");
        map.put("\\Rsh","\u21B1");
        map.put("\\Rrightarrow","\u21DB");
        map.put("\\RoundImplies","\u2970");
        map.put("\\Rightarrow","\u21D2");
        map.put("\\RightVectorBar","\u2953");
        map.put("\\RightUpVectorBar","\u2954");
        map.put("\\RightUpTeeVector","\u295C");
        map.put("\\RightUpDownVector","\u294F");
        map.put("\\RightTriangleBar","\u29D0");
        map.put("\\RightTeeVector","\u295B");
        map.put("\\RightDownVectorBar","\u2955");
        map.put("\\RightDownTeeVector","\u295D");
        map.put("\\Rho","\u03A1");
        map.put("\\ReverseUpEquilibrium","\u296F");
        map.put("\\Psi","\u03A8");
        map.put("\\Pisymbol{ppi022}{87}","\u03D0");
        map.put("\\Pisymbol{ppi020}{117}","\u2A9D");
        map.put("\\Pisymbol{ppi020}{105}","\u2A9E");
        map.put("\\Pi","\u03A0");
        map.put("\\Phi","\u03A6");
        map.put("\\Omega","\u03A9");
        map.put("\\Omega","\u2126");
        map.put("\\OE","\u0152");
        map.put("\\O","\u00D8");
        map.put("\\NotSucceedsTilde","\u227F-00338");
        map.put("\\NotSquareSuperset","\u2290-00338");
        map.put("\\NotSquareSubset","\u228F-00338");
        map.put("\\NotRightTriangleBar","\u29D0-00338");
        map.put("\\NotPrecedesTilde","\u227E-00338");
        map.put("\\NotNestedLessLess","\u2AA1-00338");
        map.put("\\NotNestedGreaterGreater","\u2AA2-00338");
        map.put("\\NotLessLess","\u226A-00338");
        map.put("\\NotLeftTriangleBar","\u29CF-00338");
        map.put("\\NotHumpEqual","\u224F-00338");
        map.put("\\NotHumpDownHump","\u224E-00338");
        map.put("\\NotGreaterGreater","\u226B-00338");
        map.put("\\NotEqualTilde","\u2242-00338");
        map.put("\\NestedLessLess","\u2AA1");
        map.put("\\NestedGreaterGreater","\u2AA2");
        map.put("\\NG","\u014A");
        map.put("\\Lsh","\u21B0");
        map.put("\\Longrightarrow","\u27F9");
        map.put("\\Longleftrightarrow","\u27FA");
        map.put("\\Longleftarrow","\u27F8");
        map.put("\\Lleftarrow","\u21DA");
        map.put("\\Leftrightarrow","\u21D4");
        map.put("\\Leftarrow","\u21D0");
        map.put("\\LeftVectorBar","\u2952");
        map.put("\\LeftUpVectorBar","\u2958");
        map.put("\\LeftUpTeeVector","\u2960");
        map.put("\\LeftUpDownVector","\u2951");
        map.put("\\LeftTriangleBar","\u29CF");
        map.put("\\LeftTeeVector","\u295A");
        map.put("\\LeftRightVector","\u294E");
        map.put("\\LeftDownVectorBar","\u2959");
        map.put("\\LeftDownTeeVector","\u2961");
        map.put("\\Lambda","\u039B");
        map.put("\\L", "\u0141");
        map.put("\\Koppa","\u03DE");
        map.put("\\Kappa","\u039A");
        map.put("\\Iota","\u0399");
        map.put("\\H{}","\u02DD");
        map.put("\\H{u}","\u0171");
        map.put("\\H{o}","\u0151");
        map.put("\\H{U}","\u0170");
        map.put("\\H{O}","\u0150");
        map.put("\\H","\u030B");
        map.put("\\Gamma","\u0393");
        map.put("\\Eta","\u0397");
        map.put("\\Equal","\u2A75");
        map.put("\\Epsilon","\u0395");
        map.put("\\Elzyogh","\u0292");
        map.put("\\Elzxrat","\u211E");
        map.put("\\Elzxl","\u0335");
        map.put("\\Elzxh","\u0127");
        map.put("\\Elzvrecto","\u25AF");
        map.put("\\Elzverts","\u02C8");
        map.put("\\Elzverti","\u02CC");
        map.put("\\Elztrny","\u028E");
        map.put("\\Elztrnt","\u0287");
        map.put("\\Elztrnsa","\u0252");
        map.put("\\Elztrnrl","\u027A");
        map.put("\\Elztrnr","\u0279");
        map.put("\\Elztrnmlr","\u0270");
        map.put("\\Elztrnm","\u026F");
        map.put("\\Elztrnh","\u0265");
        map.put("\\Elztrna","\u0250");
        map.put("\\Elztfnc","\u2980");
        map.put("\\Elztesh","\u02A7");
        map.put("\\Elztdcol","\u2AF6");
        map.put("\\Elzsqspne","\u22E5");
        map.put("\\Elzsqfse","\u25EA");
        map.put("\\Elzsqfr","\u25E8");
        map.put("\\Elzsqfnw","\u2519");
        map.put("\\Elzsqfl","\u25E7");
        map.put("\\Elzschwa","\u0259");
        map.put("\\Elzsbrhr","\u02D2");
        map.put("\\Elzsblhr","\u02D3");
        map.put("\\Elzsbbrg","\u032A");
        map.put("\\Elzrvbull","\u25D8");
        map.put("\\Elzrttrnr","\u027B");
        map.put("\\Elzrtlz","\u0290");
        map.put("\\Elzrtlt","\u0288");
        map.put("\\Elzrtls","\u0282");
        map.put("\\Elzrtlr","\u027D");
        map.put("\\Elzrtln","\u0273");
        map.put("\\Elzrtll","\u026D");
        map.put("\\Elzrtld","\u0256");
        map.put("\\Elzrl","\u027C");
        map.put("\\Elzrh","\u0322");
        map.put("\\Elzreglst","\u0295");
        map.put("\\Elzreapos","\u201B");
        map.put("\\Elzrarrx","\u2947");
        map.put("\\Elzrais","\u02D4");
        map.put("\\ElzrLarr","\u2944");
        map.put("\\Elzpupsil","\u028A");
        map.put("\\Elzpscrv","\u028B");
        map.put("\\Elzpgamma","\u0263");
        map.put("\\Elzpbgam","\u0264");
        map.put("\\Elzpalh","\u0321");
        map.put("\\Elzopeno","\u0254");
        map.put("\\Elzminhat","\u2A5F");
        map.put("\\Elzltln","\u0272");
        map.put("\\Elzltlmr","\u0271");
        map.put("\\Elzlpargt","\u29A0");
        map.put("\\Elzlow","\u02D5");
        map.put("\\Elzlmrk","\u02D0");
        map.put("\\Elzinvw","\u028D");
        map.put("\\Elzinvv","\u028C");
        map.put("\\Elzinglst","\u0296");
        map.put("\\Elzhlmrk","\u02D1");
        map.put("\\Elzglst","\u0294");
        map.put("\\Elzfhr","\u027E");
        map.put("\\Elzesh","\u0283");
        map.put("\\Elzdyogh","\u02A4");
        map.put("\\Elzdshfnc","\u2506");
        map.put("\\Elzdlcorn","\u23A3");
        map.put("\\Elzdefas","\u29CB");
        map.put("\\Elzddfnc","\u2999");
        map.put("\\Elzclomeg","\u0277");
        map.put("\\Elzcirfr","\u25D1");
        map.put("\\Elzcirfl","\u25D0");
        map.put("\\Elzcirfb","\u25D2");
        map.put("\\Elzbtdl","\u026C");
        map.put("\\Elzbar","\u0336");
        map.put("\\ElzTimes","\u2A2F");
        map.put("\\ElzThr","\u2A05");
        map.put("\\ElzSup","\u2A08");
        map.put("\\ElzRlarr","\u2942");
        map.put("\\ElzOr","\u2A54");
        map.put("\\ElzLap","\u29CA");
        map.put("\\ElzInf","\u2A07");
        map.put("\\ElzCint","\u2A0D");
        map.put("\\ElzAnd","\u2A53");
        map.put("\\Elxuplus","\u2A04");
        map.put("\\Elxsqcup","\u2A06");
        map.put("\\Elroang","\u2986");
        map.put("\\Elorarr","\u2941");
        map.put("\\Elolarr","\u2940");
        map.put("\\ElOr","\u2A56");
        map.put("\\Downarrow","\u21D3");
        map.put("\\DownRightVectorBar","\u2957");
        map.put("\\DownRightTeeVector","\u295F");
        map.put("\\DownLeftVectorBar","\u2956");
        map.put("\\DownLeftTeeVector","\u295E");
        map.put("\\DownLeftRightVector","\u2950");
        map.put("\\DownArrowUpArrow","\u21F5");
        map.put("\\DownArrowBar","\u2913");
        map.put("\\Digamma","\u03DC");
        map.put("\\Delta","\u0394");
        map.put("\\DJ","\u0110");
        map.put("\\DH","\u00D0");
        map.put("\\Cup","\u22D3");
        map.put("\\Colon","\u2237");
        map.put("\\Chi","\u03A7");
        map.put("\\Cap","\u22D2");
        map.put("\\Bumpeq","\u224E");
        map.put("\\Beta","\u0392");
        map.put("\\Angle","\u299C");
        map.put("\\Alpha","\u0391");
        map.put("\\AE","\u00C6");
        map.put("\\AA","\u00C5");
        map.put("\\AA","\u212B");
        // map.put("\\ding{99}","\u2743");
        // map.put("\\ding{98}","\u2742");
        // map.put("\\ding{97}","\u2741");
        // map.put("\\ding{96}","\u2740");
        // map.put("\\ding{95}","\u273F");
        // map.put("\\ding{94}","\u273E");
        // map.put("\\ding{93}","\u273D");
        // map.put("\\ding{92}","\u273C");
        // map.put("\\ding{91}","\u273B");
        // map.put("\\ding{90}","\u273A");
        // map.put("\\ding{89}","\u2739");
        // map.put("\\ding{88}","\u2738");
        // map.put("\\ding{87}","\u2737");
        // map.put("\\ding{86}","\u2736");
        // map.put("\\ding{85}","\u2735");
        // map.put("\\ding{84}","\u2734");
        // map.put("\\ding{83}","\u2733");
        // map.put("\\ding{82}","\u2732");
        // map.put("\\ding{81}","\u2731");
        // map.put("\\ding{80}","\u2730");
        // map.put("\\ding{79}","\u272F");
        // map.put("\\ding{78}","\u272E");
        // map.put("\\ding{77}","\u272D");
        // map.put("\\ding{76}","\u272C");
        // map.put("\\ding{75}","\u272B");
        // map.put("\\ding{74}","\u272A");
        // map.put("\\ding{73}","\u2606");
        // map.put("\\ding{73}","\u2729");
        // map.put("\\ding{72}","\u2605");
        // map.put("\\ding{71}","\u2727");
        // map.put("\\ding{70}","\u2726");
        // map.put("\\ding{69}","\u2725");
        // map.put("\\ding{68}","\u2724");
        // map.put("\\ding{67}","\u2723");
        // map.put("\\ding{66}","\u2722");
        // map.put("\\ding{65}","\u2721");
        // map.put("\\ding{64}","\u2720");
        // map.put("\\ding{63}","\u271F");
        // map.put("\\ding{62}","\u271E");
        // map.put("\\ding{61}","\u271D");
        // map.put("\\ding{60}","\u271C");
        // map.put("\\ding{59}","\u271B");
        // map.put("\\ding{58}","\u271A");
        // map.put("\\ding{57}","\u2719");
        // map.put("\\ding{56}","\u2718");
        // map.put("\\ding{55}","\u2717");
        // map.put("\\ding{54}","\u2716");
        // map.put("\\ding{53}","\u2715");
        // map.put("\\ding{52}","\u2714");
        // map.put("\\ding{51}","\u2713");
        // map.put("\\ding{50}","\u2712");
        // map.put("\\ding{49}","\u2711");
        // map.put("\\ding{48}","\u2710");
        // map.put("\\ding{47}","\u270F");
        // map.put("\\ding{46}","\u270E");
        // map.put("\\ding{45}","\u270D");
        // map.put("\\ding{44}","\u270C");
        // map.put("\\ding{43}","\u261E");
        // map.put("\\ding{42}","\u261B");
        // map.put("\\ding{41}","\u2709");
        // map.put("\\ding{40}","\u2708");
        // map.put("\\ding{39}","\u2707");
        // map.put("\\ding{38}","\u2706");
        // map.put("\\ding{37}","\u260E");
        // map.put("\\ding{36}","\u2704");
        // map.put("\\ding{35}","\u2703");
        // map.put("\\ding{34}","\u2702");
        // map.put("\\ding{33}","\u2701");
        // map.put("\\ding{254}","\u27BE");
        // map.put("\\ding{253}","\u27BD");
        // map.put("\\ding{252}","\u27BC");
        // map.put("\\ding{251}","\u27BB");
        // map.put("\\ding{250}","\u27BA");
        // map.put("\\ding{249}","\u27B9");
        // map.put("\\ding{248}","\u27B8");
        // map.put("\\ding{247}","\u27B7");
        // map.put("\\ding{246}","\u27B6");
        // map.put("\\ding{245}","\u27B5");
        // map.put("\\ding{244}","\u27B4");
        // map.put("\\ding{243}","\u27B3");
        // map.put("\\ding{242}","\u27B2");
        // map.put("\\ding{241}","\u27B1");
        // map.put("\\ding{239}","\u27AF");
        // map.put("\\ding{238}","\u27AE");
        // map.put("\\ding{237}","\u27AD");
        // map.put("\\ding{236}","\u27AC");
        // map.put("\\ding{235}","\u27AB");
        // map.put("\\ding{234}","\u27AA");
        // map.put("\\ding{233}","\u27A9");
        // map.put("\\ding{232}","\u27A8");
        // map.put("\\ding{231}","\u27A7");
        // map.put("\\ding{230}","\u27A6");
        // map.put("\\ding{229}","\u27A5");
        // map.put("\\ding{228}","\u27A4");
        // map.put("\\ding{227}","\u27A3");
        // map.put("\\ding{226}","\u27A2");
        // map.put("\\ding{225}","\u27A1");
        // map.put("\\ding{224}","\u27A0");
        // map.put("\\ding{223}","\u279F");
        // map.put("\\ding{222}","\u279E");
        // map.put("\\ding{221}","\u279D");
        // map.put("\\ding{220}","\u279C");
        // map.put("\\ding{219}","\u279B");
        // map.put("\\ding{218}","\u279A");
        // map.put("\\ding{217}","\u2799");
        // map.put("\\ding{216}","\u2798");
        // map.put("\\ding{212}","\u2794");
        // map.put("\\ding{211}","\u2793");
        // map.put("\\ding{210}","\u2792");
        // map.put("\\ding{209}","\u2791");
        // map.put("\\ding{208}","\u2790");
        // map.put("\\ding{207}","\u278F");
        // map.put("\\ding{206}","\u278E");
        // map.put("\\ding{205}","\u278D");
        // map.put("\\ding{204}","\u278C");
        // map.put("\\ding{203}","\u278B");
        // map.put("\\ding{202}","\u278A");
        // map.put("\\ding{201}","\u2789");
        // map.put("\\ding{200}","\u2788");
        // map.put("\\ding{199}","\u2787");
        // map.put("\\ding{198}","\u2786");
        // map.put("\\ding{197}","\u2785");
        // map.put("\\ding{196}","\u2784");
        // map.put("\\ding{195}","\u2783");
        // map.put("\\ding{194}","\u2782");
        // map.put("\\ding{193}","\u2781");
        // map.put("\\ding{192}","\u2780");
        // map.put("\\ding{191}","\u277F");
        // map.put("\\ding{190}","\u277E");
        // map.put("\\ding{189}","\u277D");
        // map.put("\\ding{188}","\u277C");
        // map.put("\\ding{187}","\u277B");
        // map.put("\\ding{186}","\u277A");
        // map.put("\\ding{185}","\u2779");
        // map.put("\\ding{184}","\u2778");
        // map.put("\\ding{183}","\u2777");
        // map.put("\\ding{182}","\u2776");
        // map.put("\\ding{181}","\u2469");
        // map.put("\\ding{180}","\u2468");
        // map.put("\\ding{179}","\u2467");
        // map.put("\\ding{178}","\u2466");
        // map.put("\\ding{177}","\u2465");
        // map.put("\\ding{176}","\u2464");
        // map.put("\\ding{175}","\u2463");
        // map.put("\\ding{174}","\u2462");
        // map.put("\\ding{173}","\u2461");
        // map.put("\\ding{172}","\u2460");
        // map.put("\\ding{171}","\u2660");
        // map.put("\\ding{170}","\u2665");
        // map.put("\\ding{169}","\u2666");
        // map.put("\\ding{168}","\u2663");
        // map.put("\\ding{167}","\u2767");
        // map.put("\\ding{166}","\u2766");
        // map.put("\\ding{165}","\u2765");
        // map.put("\\ding{164}","\u2764");
        // map.put("\\ding{163}","\u2763");
        // map.put("\\ding{162}","\u2762");
        // map.put("\\ding{161}","\u2761");
        // map.put("\\ding{126}","\u275E");
        // map.put("\\ding{125}","\u275D");
        // map.put("\\ding{124}","\u275C");
        // map.put("\\ding{123}","\u275B");
        // map.put("\\ding{122}","\u275A");
        // map.put("\\ding{121}","\u2759");
        // map.put("\\ding{120}","\u2758");
        // map.put("\\ding{119}","\u25D7");
        // map.put("\\ding{118}","\u2756");
        // map.put("\\ding{117}","\u25C6");
        // map.put("\\ding{116}","\u25BC");
        // map.put("\\ding{115}","\u25B2");
        // map.put("\\ding{114}","\u2752");
        // map.put("\\ding{113}","\u2751");
        // map.put("\\ding{112}","\u2750");
        // map.put("\\ding{111}","\u274F");
        // map.put("\\ding{110}","\u25A0");
        // map.put("\\ding{109}","\u274D");
        // map.put("\\ding{108}","\u25CF");
        // map.put("\\ding{107}","\u274B");
        // map.put("\\ding{106}","\u274A");
        // map.put("\\ding{105}","\u2749");
        // map.put("\\ding{104}","\u2748");
        // map.put("\\ding{103}","\u2747");
        // map.put("\\ding{102}","\u2746");
        // map.put("\\ding{101}","\u2745");
        // map.put("\\ding{100}","\u2744");
        // map.put("\\ElsevierGlyph{E838}","\u233D");
        // map.put("\\ElsevierGlyph{E61B}","\u29B6");
        // map.put("\\ElsevierGlyph{E395}","\u2A10");
        // map.put("\\ElsevierGlyph{E381}","\u25B1");
        // map.put("\\ElsevierGlyph{E372}","\u29DC");
        // map.put("\\ElsevierGlyph{E36E}","\u2A55");
        // map.put("\\ElsevierGlyph{E30D}","\u2AEB");
        // map.put("\\ElsevierGlyph{E291}","\u2994");
        // map.put("\\ElsevierGlyph{E260}","\u29B5");
        // map.put("\\ElsevierGlyph{E25E}","\u2A34");
        // map.put("\\ElsevierGlyph{E25E}","\u2A35");
        // map.put("\\ElsevierGlyph{E25D}","\u2A2E");
        // map.put("\\ElsevierGlyph{E25C}","\u2A2D");
        // map.put("\\ElsevierGlyph{E25B}","\u2A2A");
        // map.put("\\ElsevierGlyph{E25A}","\u2A25");
        // map.put("\\ElsevierGlyph{E259}","\u2A3C");
        // map.put("\\ElsevierGlyph{E21D}","\u2933");
        // map.put("\\ElsevierGlyph{E21C}","\u2933");
        // map.put("\\ElsevierGlyph{E21A}","\u2936");
        // map.put("\\ElsevierGlyph{E219}","\u2937");
        // map.put("\\ElsevierGlyph{E215}","\u297D");
        // map.put("\\ElsevierGlyph{E214}","\u297C");
        // map.put("\\ElsevierGlyph{E212}","\u2905");
        // map.put("\\ElsevierGlyph{E211}","\u2927");
        // map.put("\\ElsevierGlyph{E210}","\u292A");
        // map.put("\\ElsevierGlyph{E20F}","\u2929");
        // map.put("\\ElsevierGlyph{E20E}","\u2928");
        // map.put("\\ElsevierGlyph{E20D}","\u2924");
        // map.put("\\ElsevierGlyph{E20C}","\u2923");
        // map.put("\\ElsevierGlyph{E20B}","\u2925");
        // map.put("\\ElsevierGlyph{E20A}","\u2926");
        // map.put("\\ElsevierGlyph{3019}","\u3019");
        // map.put("\\ElsevierGlyph{3018}","\u2985");
        // map.put("\\ElsevierGlyph{3018}","\u3018");
        // map.put("\\ElsevierGlyph{300B}","\u300B");
        // map.put("\\ElsevierGlyph{300A}","\u300A");
        // map.put("\\ElsevierGlyph{22C1}","\u22C1");
        // map.put("\\ElsevierGlyph{22C0}","\u22C0");
        // map.put("\\ElsevierGlyph{2275}","\u2275");
        // map.put("\\ElsevierGlyph{2274}","\u2274");
        // map.put("\\ElsevierGlyph{225F}","\u225F");
        // map.put("\\ElsevierGlyph{225A}","\u225A");
        // map.put("\\ElsevierGlyph{225A}","\u2A63");
        // map.put("\\ElsevierGlyph{2242}","\u2242");
        // map.put("\\ElsevierGlyph{2238}","\u2238");
        // map.put("\\ElsevierGlyph{2233}","\u2233");
        // map.put("\\ElsevierGlyph{2232}","\u2232");
        // map.put("\\ElsevierGlyph{21B3}","\u21B3");
        // map.put("\\ElsevierGlyph{2129}","\u2129");
        map.put("\\cyrchar{\\\'\\cyrk}","\u045C");
        map.put("\\cyrchar{\\\'\\cyrg}","\u0453");
        map.put("\\cyrchar{\\\'\\CYRK}","\u040C");
        map.put("\\cyrchar{\\\'\\CYRG}","\u0403");
        map.put("\\cyrchar\\textnumero","\u2116");
        map.put("\\cyrchar\\cyrzhdsc","\u0497");
        map.put("\\cyrchar\\cyrzh","\u0436");
        map.put("\\cyrchar\\cyrzdsc","\u0499");
        map.put("\\cyrchar\\cyrz","\u0437");
        map.put("\\cyrchar\\cyryu","\u044E");
        map.put("\\cyrchar\\cyryo","\u0451");
        map.put("\\cyrchar\\cyryi","\u0457");
        map.put("\\cyrchar\\cyryhcrs","\u04B1");
        map.put("\\cyrchar\\cyrya","\u044F");
        map.put("\\cyrchar\\cyry","\u04AF");
        map.put("\\cyrchar\\cyrv","\u0432");
        map.put("\\cyrchar\\cyrushrt","\u045E");
        map.put("\\cyrchar\\cyruk","\u0479");
        map.put("\\cyrchar\\cyru","\u0443");
        map.put("\\cyrchar\\cyrtshe","\u045B");
        map.put("\\cyrchar\\cyrthousands","\u0482");
        map.put("\\cyrchar\\cyrtetse","\u04B5");
        map.put("\\cyrchar\\cyrtdsc","\u04AD");
        map.put("\\cyrchar\\cyrt","\u0442");
        map.put("\\cyrchar\\cyrshha","\u04BB");
        map.put("\\cyrchar\\cyrshch","\u0449");
        map.put("\\cyrchar\\cyrsh","\u0448");
        map.put("\\cyrchar\\cyrsftsn","\u044C");
        map.put("\\cyrchar\\cyrsemisftsn","\u048D");
        map.put("\\cyrchar\\cyrsdsc","\u04AB");
        map.put("\\cyrchar\\cyrschwa","\u04D9");
        map.put("\\cyrchar\\cyrs","\u0441");
        map.put("\\cyrchar\\cyrrtick","\u048F");
        map.put("\\cyrchar\\cyrr","\u0440");
        map.put("\\cyrchar\\cyrpsi","\u0471");
        map.put("\\cyrchar\\cyrphk","\u04A7");
        map.put("\\cyrchar\\cyrp","\u043F");
        map.put("\\cyrchar\\cyrotld","\u04E9");
        map.put("\\cyrchar\\cyrot","\u047F");
        map.put("\\cyrchar\\cyromegatitlo","\u047D");
        map.put("\\cyrchar\\cyromegarnd","\u047B");
        map.put("\\cyrchar\\cyromega","\u0461");
        map.put("\\cyrchar\\cyro","\u043E");
        map.put("\\cyrchar\\cyrnje","\u045A");
        map.put("\\cyrchar\\cyrnhk","\u04C8");
        map.put("\\cyrchar\\cyrng","\u04A5");
        map.put("\\cyrchar\\cyrndsc","\u04A3");
        map.put("\\cyrchar\\cyrn","\u043D");
        map.put("\\cyrchar\\cyrmillions","\u0489");
        map.put("\\cyrchar\\cyrm","\u043C");
        map.put("\\cyrchar\\cyrlyus","\u0467");
        map.put("\\cyrchar\\cyrlje","\u0459");
        map.put("\\cyrchar\\cyrl","\u043B");
        map.put("\\cyrchar\\cyrkvcrs","\u049D");
        map.put("\\cyrchar\\cyrksi","\u046F");
        map.put("\\cyrchar\\cyrkoppa","\u0481");
        map.put("\\cyrchar\\cyrkhk","\u04C4");
        map.put("\\cyrchar\\cyrkhcrs","\u049F");
        map.put("\\cyrchar\\cyrkdsc","\u049B");
        map.put("\\cyrchar\\cyrkbeak","\u04A1");
        map.put("\\cyrchar\\cyrk","\u043A");
        map.put("\\cyrchar\\cyrje","\u0458");
        map.put("\\cyrchar\\cyrishrt","\u0439");
        map.put("\\cyrchar\\cyriotlyus","\u0469");
        map.put("\\cyrchar\\cyriote","\u0465");
        map.put("\\cyrchar\\cyriotbyus","\u046D");
        map.put("\\cyrchar\\cyrii","\u0456");
        map.put("\\cyrchar\\cyrie","\u0454");
        map.put("\\cyrchar\\cyri","\u0438");
        map.put("\\cyrchar\\cyrhundredthousands","\u0488");
        map.put("\\cyrchar\\cyrhrdsn","\u044A");
        map.put("\\cyrchar\\cyrhdsc","\u04B3");
        map.put("\\cyrchar\\cyrh","\u0445");
        map.put("\\cyrchar\\cyrgup","\u0491");
        map.put("\\cyrchar\\cyrghk","\u0495");
        map.put("\\cyrchar\\cyrghcrs","\u0493");
        map.put("\\cyrchar\\cyrg","\u0433");
        map.put("\\cyrchar\\cyrf","\u0444");
        map.put("\\cyrchar\\cyrery","\u044B");
        map.put("\\cyrchar\\cyrerev","\u044D");
        map.put("\\cyrchar\\cyre","\u0435");
        map.put("\\cyrchar\\cyrdzhe","\u045F");
        map.put("\\cyrchar\\cyrdze","\u0455");
        map.put("\\cyrchar\\cyrdje","\u0452");
        map.put("\\cyrchar\\cyrd","\u0434");
        map.put("\\cyrchar\\cyrchvcrs","\u04B9");
        map.put("\\cyrchar\\cyrchrdsc","\u04B7");
        map.put("\\cyrchar\\cyrchldsc","\u04CC");
        map.put("\\cyrchar\\cyrch","\u0447");
        map.put("\\cyrchar\\cyrc","\u0446");
        map.put("\\cyrchar\\cyrb","\u0431");
        map.put("\\cyrchar\\cyrae","\u04D5");
        map.put("\\cyrchar\\cyrabhha","\u04A9");
        map.put("\\cyrchar\\cyrabhdze","\u04E1");
        map.put("\\cyrchar\\cyrabhchdsc","\u04BF");
        map.put("\\cyrchar\\cyrabhch","\u04BD");
        map.put("\\cyrchar\\cyra","\u0430");
        map.put("\\cyrchar\\CYRpalochka","\u04C0");
        map.put("\\cyrchar\\CYRZHDSC","\u0496");
        map.put("\\cyrchar\\CYRZH","\u0416");
        map.put("\\cyrchar\\CYRZDSC","\u0498");
        map.put("\\cyrchar\\CYRZ","\u0417");
        map.put("\\cyrchar\\CYRYU","\u042E");
        map.put("\\cyrchar\\CYRYO","\u0401");
        map.put("\\cyrchar\\CYRYI","\u0407");
        map.put("\\cyrchar\\CYRYHCRS","\u04B0");
        map.put("\\cyrchar\\CYRYAT","\u0462");
        map.put("\\cyrchar\\CYRYA","\u042F");
        map.put("\\cyrchar\\CYRY","\u04AE");
        map.put("\\cyrchar\\CYRV","\u0412");
        map.put("\\cyrchar\\CYRUSHRT","\u040E");
        map.put("\\cyrchar\\CYRUK","\u0478");
        map.put("\\cyrchar\\CYRU","\u0423");
        map.put("\\cyrchar\\CYRTSHE","\u040B");
        map.put("\\cyrchar\\CYRTETSE","\u04B4");
        map.put("\\cyrchar\\CYRTDSC","\u04AC");
        map.put("\\cyrchar\\CYRT","\u0422");
        map.put("\\cyrchar\\CYRSHHA","\u04BA");
        map.put("\\cyrchar\\CYRSHCH","\u0429");
        map.put("\\cyrchar\\CYRSH","\u0428");
        map.put("\\cyrchar\\CYRSFTSN","\u042C");
        map.put("\\cyrchar\\CYRSEMISFTSN","\u048C");
        map.put("\\cyrchar\\CYRSDSC","\u04AA");
        map.put("\\cyrchar\\CYRSCHWA","\u04D8");
        map.put("\\cyrchar\\CYRS","\u0421");
        map.put("\\cyrchar\\CYRRTICK","\u048E");
        map.put("\\cyrchar\\CYRR","\u0420");
        map.put("\\cyrchar\\CYRPSI","\u0470");
        map.put("\\cyrchar\\CYRPHK","\u04A6");
        map.put("\\cyrchar\\CYRP","\u041F");
        map.put("\\cyrchar\\CYROTLD","\u04E8");
        map.put("\\cyrchar\\CYROT","\u047E");
        map.put("\\cyrchar\\CYROMEGATITLO","\u047C");
        map.put("\\cyrchar\\CYROMEGARND","\u047A");
        map.put("\\cyrchar\\CYROMEGA","\u0460");
        map.put("\\cyrchar\\CYRO","\u041E");
        map.put("\\cyrchar\\CYRNJE","\u040A");
        map.put("\\cyrchar\\CYRNHK","\u04C7");
        map.put("\\cyrchar\\CYRNG","\u04A4");
        map.put("\\cyrchar\\CYRNDSC","\u04A2");
        map.put("\\cyrchar\\CYRN","\u041D");
        map.put("\\cyrchar\\CYRM","\u041C");
        map.put("\\cyrchar\\CYRLYUS","\u0466");
        map.put("\\cyrchar\\CYRLJE","\u0409");
        map.put("\\cyrchar\\CYRL","\u041B");
        map.put("\\cyrchar\\CYRKVCRS","\u049C");
        map.put("\\cyrchar\\CYRKSI","\u046E");
        map.put("\\cyrchar\\CYRKOPPA","\u0480");
        map.put("\\cyrchar\\CYRKHK","\u04C3");
        map.put("\\cyrchar\\CYRKHCRS","\u049E");
        map.put("\\cyrchar\\CYRKDSC","\u049A");
        map.put("\\cyrchar\\CYRKBEAK","\u04A0");
        map.put("\\cyrchar\\CYRK","\u041A");
        map.put("\\cyrchar\\CYRJE","\u0408");
        map.put("\\cyrchar\\CYRIZH","\u0474");
        map.put("\\cyrchar\\CYRISHRT","\u0419");
        map.put("\\cyrchar\\CYRIOTLYUS","\u0468");
        map.put("\\cyrchar\\CYRIOTE","\u0464");
        map.put("\\cyrchar\\CYRIOTBYUS","\u046C");
        map.put("\\cyrchar\\CYRII","\u0406");
        map.put("\\cyrchar\\CYRIE","\u0404");
        map.put("\\cyrchar\\CYRI","\u0418");
        map.put("\\cyrchar\\CYRHRDSN","\u042A");
        map.put("\\cyrchar\\CYRHDSC","\u04B2");
        map.put("\\cyrchar\\CYRH","\u0425");
        map.put("\\cyrchar\\CYRGUP","\u0490");
        map.put("\\cyrchar\\CYRGHK","\u0494");
        map.put("\\cyrchar\\CYRGHCRS","\u0492");
        map.put("\\cyrchar\\CYRG","\u0413");
        map.put("\\cyrchar\\CYRFITA","\u0472");
        map.put("\\cyrchar\\CYRF","\u0424");
        map.put("\\cyrchar\\CYRERY","\u042B");
        map.put("\\cyrchar\\CYREREV","\u042D");
        map.put("\\cyrchar\\CYRE","\u0415");
        map.put("\\cyrchar\\CYRDZHE","\u040F");
        map.put("\\cyrchar\\CYRDZE","\u0405");
        map.put("\\cyrchar\\CYRDJE","\u0402");
        map.put("\\cyrchar\\CYRD","\u0414");
        map.put("\\cyrchar\\CYRCHVCRS","\u04B8");
        map.put("\\cyrchar\\CYRCHRDSC","\u04B6");
        map.put("\\cyrchar\\CYRCHLDSC","\u04CB");
        map.put("\\cyrchar\\CYRCH","\u0427");
        map.put("\\cyrchar\\CYRC","\u0426");
        map.put("\\cyrchar\\CYRBYUS","\u046A");
        map.put("\\cyrchar\\CYRB","\u0411");
        map.put("\\cyrchar\\CYRAE","\u04D4");
        map.put("\\cyrchar\\CYRABHHA","\u04A8");
        map.put("\\cyrchar\\CYRABHDZE","\u04E0");
        map.put("\\cyrchar\\CYRABHCHDSC","\u04BE");
        map.put("\\cyrchar\\CYRABHCH","\u04BC");
        map.put("\\cyrchar\\CYRA","\u0410");
        map.put("\\cyrchar\\C","\u030F");
        return Collections.unmodifiableMap(map);
    }


    private static Map<String, String> createLatexSubstitutionMap() {
        Map<String, String> map = new LinkedHashMap<String, String>();
        map.put("---","—");
        map.put("--","–");
        map.put("^0","\u2070");
        map.put("^1","\u00B9");
        map.put("^2","\u00B2");
        map.put("^3","\u00B3");
        map.put("^4","\u2074");
        map.put("^5","\u2075");
        map.put("^6","\u2076");
        map.put("^7","\u2077");
        map.put("^8","\u2078");
        map.put("^9","\u2079");
        map.put("^+","\u207A");
        map.put("^-","\u207B");
        map.put("^=","\u207C");
        map.put("^A","\u1D2C");
        map.put("^B","\u1D2E");
        map.put("^D","\u1D30");
        map.put("^E","\u1D31");
        map.put("^F","\u1D32");
        map.put("^G","\u1D33");
        map.put("^H","\u1D34");
        map.put("^I","\u1D35");
        map.put("^J","\u1D36");
        map.put("^K","\u1D37");
        map.put("^L","\u1D38");
        map.put("^M","\u1D39");
        map.put("^N","\u1D3A");
        map.put("^O","\u1D3C");
        map.put("^P","\u1D3E");
        map.put("^R","\u1D3F");
        map.put("^T","\u1D40");
        map.put("^U","\u1D41");
        map.put("^W","\u1D42");
        map.put("^a","\u1D43");
        map.put("^b","\u1D47");
        map.put("^c","\u1D9C");
        map.put("^d","\u1D48");
        map.put("^e","\u1D49");
        map.put("^f","\u1DA0");
        map.put("^g","\u1D4D");
        map.put("^h","\u02B0");
        map.put("^i","\u2071");
        map.put("^j","\u02B2");
        map.put("^k","\u1D4F");
        map.put("^l","\u02E1");
        map.put("^m","\u1D50");
        map.put("^n","\u207F");        
        map.put("^o","\u1D52");
        map.put("^p","\u1D56");
        map.put("^r","\u02B3");
        map.put("^s","\u02E2");
        map.put("^t","\u1D57");
        map.put("^u","\u1D58");
        map.put("^v","\u1D5B");
        map.put("^w","\u02B7");
        map.put("^x","\u02E3");
        map.put("^y","\u02B8");
        map.put("^z","\u1DBB");
        map.put("_0","\u2080");
        map.put("_1","\u2081");
        map.put("_2","\u2082");
        map.put("_3","\u2083");
        map.put("_4","\u2084");
        map.put("_5","\u2085");
        map.put("_6","\u2086");
        map.put("_7","\u2087");
        map.put("_8","\u2088");
        map.put("_9","\u2089");
        map.put("_+","\u208A");
        map.put("_-","\u208B");
        map.put("_=","\u208C");
        map.put("_a","\u2090");
        map.put("_e","\u2091");
        map.put("_i","\u1D62");
        map.put("_j","\u2C7C");
        map.put("_o","\u2092");
        map.put("_r","\u1D63");
        map.put("_u","\u1D64");
        map.put("_v","\u1D65");
        map.put("_x","\u2093");
        map.put("{\'}","\u2032");
        map.put("{\'\'}","\u2033");
        map.put("{\'\'\'}","\u2034");
        map.put("ij","\u0133");
        map.put("fl","\uFB02");
        map.put("fi","\uFB01");
        // map.put("ffl","\uFB04"); //Not supporte by the fonts of some devices
        // map.put("ffi","\uFB03");
        // map.put("ff","\uFB00");
        map.put("IJ","\u0132");
        map.put("=:","\u2255");
        map.put("<\\kern-0.58em(","\u2993");
        map.put(":=","\u2254");
        map.put("..","\u2025");
        map.put(",,","\u201E");
        map.put("\'n","\u0149");
        map.put("\'\'\'\'","\u2057");
        map.put("\\_","_");
        map.put("\\{","{");
        map.put("\\}","}");
        map.put("\\$","");
        map.put("{","");
        map.put("}","");
        return Collections.unmodifiableMap(map);
    }


    private static Map<String, String> createLatexExpansionMap() {
        Map<String, String> map = new LinkedHashMap<String, String>();
        map.put("\\$\\\\backslash\\$","\\\\");
        map.put("\\\\backslash ","\\\\");
        map.put("\\~([[a-z][A-Z]])","\\~{$1}");
        map.put("\\`([[a-z][A-Z]])","\\`{$1}");
        map.put("\\^([[a-z][A-Z]])","\\^{$1}");
        map.put("\\=([[a-z][A-Z]])","\\={$1}");
        map.put("\\.([[a-z][A-Z]])","\\.{$1}");
        map.put("\\\'([[a-z][A-Z]])","\\\'{$1}");
        map.put("\\\"([[a-z][A-Z]])","\\\"{$1}");
        return Collections.unmodifiableMap(map);
    }    

        /*Match all latex commands starting with a \ and include their argument in case they have one and also include some special cases from the LatexCommandMap. Note: we are not actually caturing ALL cases!*/
    static String latexCommandRegex = "(\\\\cyrchar\\\\[A-Z]+|\\\\not\\\\[^ \\\\{};%#-]+|\\\\textfrac\\{[0-9]\\}\\{[0-9]\\}|\\\\frac\\{[0-9]\\}\\{[0-9]\\}|\\\\[^ a-zA-Z\\\\{};%#-]\\{[^ \\\\{};%#-]+\\}|\\\\[^ a-zA-Z\\\\{};%#-]|\\\\[a-zA-Z]+\\{[^ \\\\{};%#-]+\\}|\\\\[a-zA-Z]+)";
    static Pattern pattern = Pattern.compile(latexCommandRegex);
    
    public static String parse(String string)
    {
        List<String> foundCommandsList = new ArrayList<String>();

            //We first treat the LaTeX commands that start with a \
        if (string.contains("\\"))
        {
                //Expand some commands to unify the LaTeX code
            for ( LinkedHashMap.Entry<String, String> entry : latexExpansionMap.entrySet() ) {
                string = string.replaceAll(entry.getKey(),entry.getValue());
            }
            
                //Find all appearing latex commands (see latexCommandRegex above)
            Matcher matcher = pattern.matcher(string);
            while(matcher.find()) {
                foundCommandsList.add(string.substring(matcher.start(),matcher.end()));
            }

                //Expand all known commands
            for ( String command : foundCommandsList ) {
                if (latexCommandMap.containsKey(command))
                {
                    string = string.replace(command,latexCommandMap.get(command));
                }
                else
                {
                    int indexOfArgument = command.indexOf('{');
                    if(indexOfArgument != -1)
                    {
                        String commandWithoutArument = command.substring(0,indexOfArgument-1);
                        if (latexCommandMap.containsKey(commandWithoutArument)) 
                        {
                            string = string.replace(commandWithoutArument,latexCommandMap.get(commandWithoutArument));
                        }
                    }
                }
            }
        }

            //Finally make some replacements that are not commands starting with a \
        for ( LinkedHashMap.Entry<String, String> entry : latexSubstitutionMap.entrySet() ) {
            string = string.replace(entry.getKey(),entry.getValue());
        }
        
        return string;
    }
}
